{"version":3,"sources":["assets/img/wabbajack_transparent.webp","store/ModlistsStore.ts","store/ModlistInfoStore.ts","store/ModlistStatusStore.ts","store/DetailedStatusStore.ts","store/index.ts","assets/jss/theme.js","components/MaterialLink.tsx","components/Header.tsx","components/Footer.tsx","pages/home/index.tsx","pages/info/general.tsx","pages/info/modauthors.tsx","pages/info/index.tsx","types/axios.ts","components/Fetching/Loading.tsx","components/Fetching/Error.tsx","components/Fetching/DataError.tsx","utils/games.ts","pages/modlists/gallery/GalleryCard.tsx","pages/modlists/gallery/Gallery.tsx","utils/other.ts","utils/markdown.config.ts","pages/modlists/gallery/info/ModlistInfo.tsx","pages/modlists/gallery/index.tsx","pages/modlists/status/DashboardCard.tsx","pages/modlists/status/Dashboard.tsx","pages/modlists/status/info/VirtualizedList.tsx","pages/modlists/status/info/ModlistStatus.tsx","pages/modlists/status/index.tsx","pages/modlists/search/Search.tsx","pages/modlists/search/index.tsx","pages/modlists/index.tsx","App.tsx","index.tsx","store/configureStore.ts"],"names":["module","exports","actionCreator","requestModlists","dispatch","getState","appState","modlists","length","error","axios","get","then","response","data","type","catch","unloadedState","isLoading","requestModlistInfo","link","machineURL","modlistInfo","infoMap","has","extraData","readme","axiosError","Map","requestStatusList","modlistStatusList","statusList","requestDetailedStatus","modlistStatus","statusMap","status","reducers","state","incomingAction","undefined","action","set","white","black","currentTheme","primary","primaryVariant","secondary","secondaryVariant","background","surface","onPrimary","onSecondary","onBackground","onSurface","onError","theme","createMuiTheme","palette","main","light","dark","contrastText","text","disabled","overrides","MuiToolbar","root","backgroundColor","MuiDivider","MuiCardHeader","title","textAlign","MuiPaper","MuiTypography","h4","fontWeight","h5","h6","body1","MuiListItemIcon","color","MuiTableCell","MuiIcon","colorDisabled","MuiIconButton","MuiSvgIcon","MuiSkeleton","MaterialLink","props","onClick","disableScroll","window","scrollTo","isLink","Link","component","RoutedLink","to","href","children","buttonColor","Button","HideOnScroll","trigger","useScrollTrigger","Slide","appear","direction","in","Header","open","setState","left","onKeyDown","event","key","AppBar","position","variant","IconButton","edge","aria-label","this","bind","Drawer","onClose","id","role","style","width","List","ListItem","button","uuidv4","ListItemIcon","justifyContent","disableTouchRipple","disableRipple","Typography","React","flexContainer","display","flexDirection","padding","float","right","margin","FooterItem","name","target","rel","Footer","Container","process","Date","getFullYear","Tooltip","enterDelay","HomePage","maxWidth","paddingTop","paddingBottom","alignItems","src","logo","alt","paddingRight","whiteSpace","textTransform","Grid","alignContent","container","justify","marginTop","item","fullWidth","GeneralInfoPage","ModAuthorsInfoPage","InfoPage","exact","path","ModAuthorInfoPage","ReactAxiosComponent","ensureDataFetched","Loading","message","Error","DataError","getGameName","game","gameName","toLocaleLowerCase","SkeletonCard","Card","CardHeader","Skeleton","animation","height","marginLeft","marginRight","CardMedia","CardContent","ModlistGalleryCard","modlist","description","author","tags","links","nsfw","image","Divider","marginBottom","spacing","Chip","size","label","underscore","map","tag","CardActions","ModlistGallery","skeletons","count","list","i","push","xs","sm","md","lg","xl","selectedGame","showNSFW","value","gamesList","_","find","gameID","sort","a","b","FormControlLabel","control","Checkbox","checked","onChange","onCheck","FormControl","Select","autoWidth","displayEmpty","MenuItem","FormHelperText","filter","includes","GalleryCard","DateTimeFormatOptions","year","month","day","hour","minute","second","getDateString","date","local","Intl","DateTimeFormat","format","Suffix","headingStyle","lineHeight","topHeadingStyle","borderBottom","options","baseURL","externalURL","h1","fontSize","h2","h3","p","wordWrap","img","createElement","anyProps","startsWith","split","url","replace","endsWith","rawURL","getGitHubLinkFromRaw","ModlistInfo","currentModlist","current","match","params","version","borderRadius","showLoading","showError","showContent","connector","connect","ownProps","ModlistInfoStore","ModlistsGalleryPage","render","Gallery","clickableTitle","dot","greenDot","redDot","DashboardCard","failed","passed","has_failures","dateString","Paper","Dashboard","chain","sortBy","success","VirtualizedList","renderRow","componentProps","index","ListItemText","Archive","Name","itemCount","itemSize","ModlistStatus","Checked","HasFailures","Archives","failing","archive","IsFailing","passing","StatusStore","ModlistsStatusPage","ModlistStatusStore","ModlistSearch","State","$type","nexusState","GameName","toLowerCase","ModID","gDriveState","Id","httpState","Url","metaState","URL","renderDetailPanel","rowData","Author","Version","Description","ImageURL","showImages","archives","components","Toolbar","onCheckNSFW","onCheckImages","sorting","headerStyle","columns","field","defaultSort","bytes","Math","abs","place","floor","log","num","round","pow","sign","toFileSizeString","Size","customSort","renderState","actions","icon","tooltip","detailPanel","disabledDetailPanel","DetailedStatusStore","ModlistSearchPage","Search","ModlistsPage","ModlistsStore","mainRaised","boxShadow","App","Box","m","baseUrl","document","getElementsByTagName","getAttribute","history","createBrowserHistory","basename","store","initialState","middleware","thunk","routerMiddleware","rootReducer","combineReducers","router","connectRouter","enhancers","windowIfDefined","__REDUX_DEVTOOLS_EXTENSION__","createStore","compose","applyMiddleware","configureStore","userAgent","navigator","test","ReactDOM","getElementById","ThemeProvider"],"mappings":"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","file":"static/js/main.9420cb86.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/wabbajack_transparent.de1ef58e.webp\";","import axios from 'axios';\n\nimport { Action, Reducer } from 'redux';\nimport { AppThunkAction } from '.';\nimport { ModlistMetaData } from 'types/modlist';\nimport { AxiosState, AxiosError } from 'types/axios';\n\n// -----------------\n// STATE - This defines the type of data maintained in the Redux store.\n\nexport interface ModlistsState extends AxiosState {\n  modlists?: ModlistMetaData[] | undefined;\n}\n\n// -----------------\n// ACTIONS - These are serializable (hence replayable) descriptions of state transitions.\n// They do not themselves have any side-effects; they just describe something that is going to happen.\n\nexport interface FetchModlistsRequest {\n  type: 'FETCH_MODLISTS_REQUEST';\n}\n\nexport interface FetchModlistsSuccess {\n  type: 'FETCH_MODLISTS_SUCCESS';\n  modlists: ModlistMetaData[];\n}\n\nexport interface FetchModlistsFailure {\n  type: 'FETCH_MODLISTS_FAILURE';\n  error: AxiosError;\n}\n\n// Declare a 'discriminated union' type. This guarantees that all references to 'type' properties contain one of the\n// declared type strings (and not any other arbitrary string).\nexport type KnownAction =\n  | FetchModlistsRequest\n  | FetchModlistsSuccess\n  | FetchModlistsFailure;\n\n// ----------------\n// ACTION CREATORS - These are functions exposed to UI components that will trigger a state transition.\n// They don't directly mutate state, but they can have external side-effects (such as loading data).\n\nexport const actionCreator = {\n  requestModlists: (): AppThunkAction<KnownAction> => (dispatch, getState) => {\n    const appState = getState();\n    if (\n      appState &&\n      appState.modlists &&\n      appState.modlists.modlists &&\n      appState.modlists.modlists.length === 0 &&\n      !appState.modlists.error\n    ) {\n      axios\n        .get(\n          'https://raw.githubusercontent.com/wabbajack-tools/mod-lists/master/modlists.json'\n        )\n        .then((response) => response.data as Promise<ModlistMetaData[]>)\n        .then((data) => {\n          dispatch({ type: 'FETCH_MODLISTS_SUCCESS', modlists: data });\n        })\n        .catch((error) => {\n          const axiosError = error as AxiosError;\n          dispatch({ type: 'FETCH_MODLISTS_FAILURE', error: axiosError });\n        });\n\n      dispatch({ type: 'FETCH_MODLISTS_REQUEST' });\n    }\n  },\n};\n\n// ----------------\n// REDUCER - For a given state and action, returns the new state. To support time travel, this must not mutate the old state.\n\nexport const unloadedState: ModlistsState = { isLoading: false, modlists: [] };\n\nexport const reducer: Reducer<ModlistsState> = (\n  state: ModlistsState | undefined,\n  incomingAction: Action\n): ModlistsState => {\n  if (state === undefined) {\n    return unloadedState;\n  }\n\n  const action = incomingAction as KnownAction;\n  switch (action.type) {\n    case 'FETCH_MODLISTS_REQUEST':\n      return {\n        isLoading: true,\n        modlists: state.modlists,\n      };\n    case 'FETCH_MODLISTS_SUCCESS':\n      return {\n        isLoading: false,\n        modlists: action.modlists,\n      };\n    case 'FETCH_MODLISTS_FAILURE':\n      return {\n        isLoading: false,\n        error: action.error,\n      };\n  }\n\n  return state;\n};\n","import axios from 'axios';\n\nimport { Action, Reducer } from 'redux';\nimport { AppThunkAction } from '.';\nimport { AxiosState, AxiosError } from 'types/axios';\n\nexport interface ModlistInfoState extends AxiosState {\n  infoMap: Map<string, string>;\n}\n\nexport interface FetchModlistInfoRequest {\n  type: 'FETCH_MODLISTINFO_REQUEST';\n  machineURL: string;\n  link: string;\n}\n\nexport interface FetchModlistInfoSuccess {\n  type: 'FETCH_MODLISTINFO_SUCCESS';\n  machineURL: string;\n  readme: string;\n}\n\nexport interface FetchModlistInfoFailure {\n  type: 'FETCH_MODLISTINFO_FAILURE';\n  error: AxiosError;\n}\n\nexport type KnownAction =\n  | FetchModlistInfoRequest\n  | FetchModlistInfoSuccess\n  | FetchModlistInfoFailure;\n\nexport const actionCreator = {\n  requestModlistInfo: (\n    link: string,\n    machineURL: string\n  ): AppThunkAction<KnownAction> => (dispatch, getState) => {\n    const appState = getState();\n    if (\n      appState &&\n      appState.modlistInfo &&\n      appState.modlistInfo.infoMap &&\n      !appState.modlistInfo.infoMap.has(machineURL) &&\n      appState.modlistInfo.error?.extraData !== machineURL\n    ) {\n      axios\n        .get(link)\n        .then((response) => response.data as Promise<string>)\n        .then((data) => {\n          dispatch({\n            type: 'FETCH_MODLISTINFO_SUCCESS',\n            readme: data,\n            machineURL: machineURL,\n          });\n        })\n        .catch((error) => {\n          const axiosError = error as AxiosError;\n          axiosError.extraData = machineURL;\n          dispatch({\n            type: 'FETCH_MODLISTINFO_FAILURE',\n            error: axiosError,\n          });\n        });\n\n      dispatch({\n        type: 'FETCH_MODLISTINFO_REQUEST',\n        link: link,\n        machineURL: machineURL,\n      });\n    }\n  },\n};\n\nconst unloadedState: ModlistInfoState = {\n  isLoading: false,\n  infoMap: new Map<string, string>(),\n};\n\nexport const reducer: Reducer<ModlistInfoState> = (\n  state: ModlistInfoState | undefined,\n  incomingAction: Action\n): ModlistInfoState => {\n  if (state === undefined) {\n    return unloadedState;\n  }\n\n  const action = incomingAction as KnownAction;\n  switch (action.type) {\n    case 'FETCH_MODLISTINFO_REQUEST':\n      return {\n        isLoading: true,\n        infoMap: state.infoMap,\n      };\n    case 'FETCH_MODLISTINFO_SUCCESS':\n      state.infoMap.set(action.machineURL, action.readme);\n      return {\n        isLoading: false,\n        infoMap: state.infoMap,\n      };\n    case 'FETCH_MODLISTINFO_FAILURE':\n      return {\n        isLoading: false,\n        error: action.error,\n        infoMap: state.infoMap,\n      };\n  }\n\n  return state;\n};\n","import axios from 'axios';\n\nimport { Action, Reducer } from 'redux';\nimport { AppThunkAction } from '.';\nimport { ModlistStatus } from 'types/modlist';\nimport { AxiosState, AxiosError } from 'types/axios';\n\nexport interface ModlistStatusState extends AxiosState {\n  statusList?: ModlistStatus[] | undefined;\n}\n\nexport interface FetchStatusListRequest {\n  type: 'FETCH_STATUSLIST_REQUEST';\n}\n\nexport interface FetchStatusListSuccess {\n  type: 'FETCH_STATUSLIST_SUCCESS';\n  statusList: ModlistStatus[];\n}\n\nexport interface FetchStatusListFailure {\n  type: 'FETCH_STATUSLIST_FAILURE';\n  error: AxiosError;\n}\n\nexport type KnownAction =\n  | FetchStatusListRequest\n  | FetchStatusListSuccess\n  | FetchStatusListFailure;\n\nexport const actionCreator = {\n  requestStatusList: (): AppThunkAction<KnownAction> => (\n    dispatch,\n    getState\n  ) => {\n    const appState = getState();\n    if (\n      appState &&\n      appState.modlistStatusList &&\n      appState.modlistStatusList.statusList &&\n      appState.modlistStatusList.statusList.length === 0 &&\n      !appState.modlistStatusList.error\n    ) {\n      axios\n        .get('https://build.wabbajack.org/lists/status.json')\n        .then((response) => response.data as Promise<ModlistStatus[]>)\n        .then((data) => {\n          dispatch({ type: 'FETCH_STATUSLIST_SUCCESS', statusList: data });\n        })\n        .catch((error) => {\n          const axiosError = error as AxiosError;\n          dispatch({ type: 'FETCH_STATUSLIST_FAILURE', error: axiosError });\n        });\n\n      dispatch({ type: 'FETCH_STATUSLIST_REQUEST' });\n    }\n  },\n};\n\nconst unloadedState: ModlistStatusState = { isLoading: false, statusList: [] };\n\nexport const reducer: Reducer<ModlistStatusState> = (\n  state: ModlistStatusState | undefined,\n  incomingAction: Action\n): ModlistStatusState => {\n  if (state === undefined) {\n    return unloadedState;\n  }\n\n  const action = incomingAction as KnownAction;\n  switch (action.type) {\n    case 'FETCH_STATUSLIST_REQUEST':\n      return {\n        isLoading: true,\n        statusList: state.statusList,\n      };\n    case 'FETCH_STATUSLIST_SUCCESS':\n      return {\n        isLoading: false,\n        statusList: action.statusList,\n      };\n    case 'FETCH_STATUSLIST_FAILURE':\n      return {\n        isLoading: false,\n        error: action.error,\n      };\n  }\n\n  return state;\n};\n","import axios from 'axios';\n\nimport { Action, Reducer } from 'redux';\nimport { AppThunkAction } from '.';\nimport { ModlistDetailedStatus } from 'types/modlist';\nimport { AxiosState, AxiosError } from 'types/axios';\n\nexport interface ModlistStatusState extends AxiosState {\n  statusMap?: Map<string, ModlistDetailedStatus> | undefined;\n}\n\nexport interface FetchStatusRequest {\n  type: 'FETCH_STATUS_REQUEST';\n  link: string;\n}\n\nexport interface FetchStatusSuccess {\n  type: 'FETCH_STATUS_SUCCESS';\n  link: string;\n  status: ModlistDetailedStatus;\n}\n\nexport interface FetchStatusFailure {\n  type: 'FETCH_STATUS_FAILURE';\n  error: AxiosError;\n}\n\nexport type KnownAction =\n  | FetchStatusRequest\n  | FetchStatusSuccess\n  | FetchStatusFailure;\n\nexport const actionCreator = {\n  requestDetailedStatus: (link: string): AppThunkAction<KnownAction> => (\n    dispatch,\n    getState\n  ) => {\n    const appState = getState();\n    if (\n      appState.modlistStatus &&\n      !appState.modlistStatus.error &&\n      appState.modlistStatus.statusMap &&\n      !appState.modlistStatus.statusMap.has(link)\n    ) {\n      axios\n        .get(`https://build.wabbajack.org/lists/status/${link}.json`)\n        .then((response) => response.data as Promise<ModlistDetailedStatus>)\n        .then((data) => {\n          dispatch({ type: 'FETCH_STATUS_SUCCESS', status: data, link: link });\n        })\n        .catch((error) => {\n          const axiosError = error as AxiosError;\n          dispatch({ type: 'FETCH_STATUS_FAILURE', error: axiosError });\n        });\n      dispatch({ type: 'FETCH_STATUS_REQUEST', link: link });\n    }\n  },\n};\n\nconst unloadedState: ModlistStatusState = {\n  isLoading: false,\n  statusMap: new Map(),\n};\n\nexport const reducer: Reducer<ModlistStatusState> = (\n  state: ModlistStatusState | undefined,\n  incomingAction: Action\n): ModlistStatusState => {\n  if (state === undefined) {\n    return unloadedState;\n  }\n\n  const action = incomingAction as KnownAction;\n  switch (action.type) {\n    case 'FETCH_STATUS_REQUEST':\n      return {\n        isLoading: true,\n        statusMap: state.statusMap,\n      };\n    case 'FETCH_STATUS_SUCCESS':\n      state.statusMap?.set(action.link, action.status);\n      return {\n        isLoading: false,\n        statusMap: state.statusMap,\n      };\n    case 'FETCH_STATUS_FAILURE':\n      return {\n        isLoading: false,\n        error: action.error,\n      };\n  }\n  return state;\n};\n","import * as Modlists from './ModlistsStore';\nimport * as ModlistInfo from './ModlistInfoStore';\nimport * as ModlistStatusList from './ModlistStatusStore';\nimport * as ModlistStatus from './DetailedStatusStore';\n\n// The top-level state object\nexport interface ApplicationState {\n  modlists: Modlists.ModlistsState | undefined;\n  modlistInfo: ModlistInfo.ModlistInfoState | undefined;\n  modlistStatusList: ModlistStatusList.ModlistStatusState | undefined;\n  modlistStatus: ModlistStatus.ModlistStatusState | undefined;\n}\n\n// Whenever an action is dispatched, Redux will update each top-level application state property using\n// the reducer with the matching name. It's important that the names match exactly, and that the reducer\n// acts on the corresponding ApplicationState property type.\nexport const reducers = {\n  modlists: Modlists.reducer,\n  modlistInfo: ModlistInfo.reducer,\n  modlistStatusList: ModlistStatusList.reducer,\n  modlistStatus: ModlistStatus.reducer,\n};\n\n// This type can be used as a hint on action creators so that its 'dispatch' and 'getState' params are\n// correctly typed to match your store.\nexport interface AppThunkAction<TAction> {\n  (dispatch: (action: TAction) => void, getState: () => ApplicationState): void;\n}\n","// This is the global material-ui theme\n\nimport { createMuiTheme } from '@material-ui/core/styles';\n\n// import { deepPurple, teal, cyan, blueGrey } from '@material-ui/core/colors';\n\nconst white = '#FFFFFF';\nconst black = '#000000';\n\nconst elevation0 = '#121212';\nconst elevation1 = '#1E1E1E';\nconst elevation2 = '#222222';\nconst elevation3 = '#242424';\nconst elevation4 = '#272727';\nconst elevation6 = '#2C2C2C';\nconst elevation8 = '#2D2D2D';\nconst elevation12 = '#323232';\nconst elevation16 = '#353535';\nconst elevation24 = '#383838';\n\n// eslint-disable-next-line\nconst whiteTheme = {\n  primary: '#6200EE', // 500\n  primaryVariant: '#3700B3', // 700\n  secondary: '#03DAC6', // 200\n  secondaryVariant: '#018786', // 900\n  background: white,\n  surface: white,\n  error: '#B00020',\n  onPrimary: white,\n  onSecondary: black,\n  onBackground: black,\n  onSurface: black,\n  onError: white,\n};\n\nconst darkTheme = {\n  primary: '#BB86FC', // 200\n  primaryVariant: '#3700B3', // 700\n  secondary: '#03DAC6', // 200\n  secondaryVariant: '#03DAC6', // 200\n  background: elevation0,\n  surface: elevation0,\n  error: '#CF6679',\n  onPrimary: black,\n  onSecondary: black,\n  onBackground: white,\n  onSurface: white,\n  onError: black,\n};\n\nconst currentTheme = darkTheme;\n\nconst theme = createMuiTheme({\n  palette: {\n    primary: {\n      main: currentTheme.primary,\n      light: currentTheme.primary,\n      dark: currentTheme.primaryVariant,\n      contrastText: currentTheme.onPrimary,\n    },\n    secondary: {\n      main: currentTheme.secondary,\n      light: currentTheme.secondary,\n      dark: currentTheme.secondaryVariant,\n      contrastText: currentTheme.onSecondary,\n    },\n    text: {\n      primary: currentTheme.onBackground,\n      secondary: '#EEEEEE',\n      disabled: '#DDDDDD',\n    },\n  },\n  overrides: {\n    MuiToolbar: {\n      root: {\n        backgroundColor: '#1F1B24',\n      },\n    },\n    MuiDivider: {\n      root: {\n        backgroundColor: '#AAAAAA',\n      },\n    },\n    MuiCardHeader: {\n      title: {\n        textAlign: 'center',\n      },\n    },\n    MuiPaper: {\n      root: {\n        backgroundColor: elevation24,\n      },\n    },\n    MuiTypography: {\n      h4: {\n        textAlign: 'center',\n        fontWeight: '200',\n      },\n      h5: {\n        fontWeight: '400',\n      },\n      h6: {\n        fontWeight: '300',\n      },\n      body1: {\n        fontWeight: '200',\n      },\n    },\n    MuiListItemIcon: {\n      root: {\n        color: white,\n      },\n    },\n    MuiTableCell: {\n      root: {\n        backgroundColor: '#323232',\n      },\n    },\n    MuiIcon: {\n      colorDisabled: 'grey',\n    },\n    MuiIconButton: {\n      colorDisabled: 'grey',\n      root: {\n        //color: 'white !important',\n      },\n    },\n    MuiSvgIcon: {\n      root: {\n        //color: 'white !important',\n      },\n    },\n    MuiSkeleton: {\n      root: {\n        backgroundColor: elevation4,\n      },\n    },\n  },\n});\n\nexport {\n  theme,\n  elevation0,\n  elevation1,\n  elevation2,\n  elevation3,\n  elevation4,\n  elevation6,\n  elevation8,\n  elevation12,\n  elevation16,\n  elevation24,\n};\n","import * as React from 'react';\nimport { Link as RoutedLink } from 'react-router-dom';\n\nimport { Button, ButtonProps, Link } from '@material-ui/core';\n\ninterface Props {\n  href: string;\n  disableScroll?: boolean;\n  isLink?: boolean;\n  buttonColor?: 'inherit' | 'primary' | 'secondary' | 'default' | undefined;\n}\n\ntype MaterialLinkProps = ButtonProps & Props;\n\n//https://material-ui.com/guides/composition/#routing-libraries\n//https://reacttraining.com/react-router/web/api/Link\nconst MaterialLink: React.FC<MaterialLinkProps> = (props) => {\n  const onClick = () => {\n    if (!props.disableScroll) window.scrollTo(0, 0);\n  };\n\n  if (props.isLink) {\n    return (\n      <Link component={RoutedLink} to={props.href} onClick={onClick}>\n        {props.children}\n      </Link>\n    );\n  }\n\n  if (props.buttonColor) {\n    return (\n      <Button\n        component={RoutedLink}\n        to={props.href}\n        onClick={onClick}\n        color={props.buttonColor}\n      >\n        {props.children}\n      </Button>\n    );\n  } else {\n    return (\n      <Button component={RoutedLink} to={props.href} onClick={onClick}>\n        {props.children}\n      </Button>\n    );\n  }\n};\n\nexport default MaterialLink;\n","import * as React from 'react';\nimport { v4 as uuidv4 } from 'uuid';\n\nimport MaterialLink from './MaterialLink';\n\nimport {\n  AppBar,\n  IconButton,\n  Slide,\n  useScrollTrigger,\n  Typography,\n  Drawer,\n  List,\n  ListItem,\n  ListItemIcon,\n  Toolbar,\n} from '@material-ui/core';\n\nimport MenuIcon from '@material-ui/icons/Menu';\nimport AppsIcon from '@material-ui/icons/Apps';\nimport DashboardIcon from '@material-ui/icons/Dashboard';\n\ninterface HideOnScrollProps {\n  children?: React.ReactElement<any, any>;\n}\n\nexport const HideOnScroll: React.FC<HideOnScrollProps> = (props) => {\n  const { children } = props;\n  const trigger = useScrollTrigger();\n\n  return (\n    <Slide appear={false} direction=\"down\" in={!trigger}>\n      {children}\n    </Slide>\n  );\n};\n\ninterface HeaderState {\n  left: boolean;\n}\n\nclass Header extends React.PureComponent<{}, HeaderState> {\n  constructor(props: {}) {\n    super(props);\n\n    this.state = {\n      left: false,\n    };\n  }\n\n  private onClick = (open: boolean) => () => {\n    this.setState({ ...this.state, left: open });\n  };\n\n  private onKeyDown = (open: boolean) => (\n    event: React.KeyboardEvent<HTMLDivElement>\n  ) => {\n    if (event.key === 'Tab' || event.key === 'Shift') return;\n\n    this.setState({ ...this.state, left: open });\n  };\n\n  public render() {\n    return (\n      <HideOnScroll>\n        <AppBar position=\"sticky\">\n          <Toolbar variant=\"dense\">\n            <IconButton\n              edge=\"start\"\n              color=\"secondary\"\n              aria-label=\"menu\"\n              onClick={this.onClick(true).bind(this)}\n            >\n              <MenuIcon />\n            </IconButton>\n            <Drawer\n              open={this.state.left}\n              onClose={this.onClick(false).bind(this)}\n            >\n              <div\n                id=\"drawer-div\"\n                role=\"presentation\"\n                onClick={this.onClick(false).bind(this)}\n                onKeyDown={this.onKeyDown(false).bind(this)}\n                style={{ width: '250px' }}\n              >\n                <List>\n                  <ListItem button key={uuidv4()}>\n                    <ListItemIcon>\n                      <AppsIcon />\n                    </ListItemIcon>\n                    <MaterialLink\n                      href=\"/modlists/gallery\"\n                      style={{ width: '100%', justifyContent: 'flex-start' }}\n                      disableTouchRipple\n                    >\n                      Gallery\n                    </MaterialLink>\n                  </ListItem>\n                  <ListItem button key={uuidv4()} href=\"/status\">\n                    <ListItemIcon>\n                      <DashboardIcon />\n                    </ListItemIcon>\n                    <MaterialLink\n                      href=\"/modlists/status\"\n                      style={{ width: '100%', justifyContent: 'flex-start' }}\n                      disableTouchRipple\n                    >\n                      Status Dashboard\n                    </MaterialLink>\n                  </ListItem>\n                </List>\n              </div>\n            </Drawer>\n            <MaterialLink disableRipple href=\"/\">\n              <Typography variant=\"button\">Wabbajack</Typography>\n            </MaterialLink>\n          </Toolbar>\n        </AppBar>\n      </HideOnScroll>\n    );\n  }\n}\n\nexport default Header;\n","import * as React from 'react';\n\nimport { Container, List, ListItem, Link, Tooltip } from '@material-ui/core';\n\nconst flexContainer: React.CSSProperties = {\n  display: 'flex',\n  flexDirection: 'row',\n  padding: 0,\n};\n\nconst left: React.CSSProperties = {\n  float: 'left',\n};\n\nconst right: React.CSSProperties = {\n  padding: '15px 0',\n  margin: 0,\n  float: 'right',\n};\n\ninterface FooterItemProps {\n  link: string | undefined;\n  name: string;\n}\n\nexport const FooterItem: React.FC<FooterItemProps> = (props) => {\n  const { link, name } = props;\n  return (\n    <ListItem>\n      <Link href={link} target=\"_blank\" rel=\"noopener noreferrer\">\n        {name}\n      </Link>\n    </ListItem>\n  );\n};\n\nconst Footer: React.FC = () => {\n  return (\n    <footer>\n      <Container>\n        <div style={left}>\n          <List style={flexContainer}>\n            <FooterItem\n              name=\"GitHub\"\n              link=\"https://github.com/wabbajack-tools/wabbajack\"\n            />\n            <FooterItem\n              name=\"Discord\"\n              link={process.env.REACT_APP_DISCORD_LINK}\n            />\n            <FooterItem\n              name=\"Patreon\"\n              link=\"https://www.patreon.com/user?u=11907933\"\n            />\n            <FooterItem\n              name=\"Reddit\"\n              link=\"https://www.reddit.com/r/wabbajack/\"\n            />\n          </List>\n        </div>\n        <div style={right}>\n          &copy; 2019 - {new Date().getFullYear()}, made by the{' '}\n          <Tooltip\n            title=\"Website actually only made by erri120 :p (don't tell anyone)\"\n            enterDelay={10000}\n          >\n            <Link\n              href=\"https://github.com/wabbajack-tools\"\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n            >\n              Wabbajack Team\n            </Link>\n          </Tooltip>\n        </div>\n      </Container>\n    </footer>\n  );\n};\n\nexport default Footer;\n","import * as React from 'react';\n\nimport MaterialLink from 'components/MaterialLink';\n\nimport { Container, Typography, Link, Button, Grid } from '@material-ui/core';\n\nimport logo from 'assets/img/wabbajack_transparent.webp';\n\nconst HomePage: React.FC = () => {\n  return (\n    <Container>\n      <Container\n        maxWidth=\"md\"\n        style={{\n          display: 'flex',\n          paddingTop: '160px',\n          paddingBottom: '160px',\n          alignItems: 'flex-start',\n          flexDirection: 'row',\n        }}\n      >\n        <img\n          src={logo}\n          alt=\"logo\"\n          style={{ paddingRight: '64px', maxWidth: '300px' }}\n        />\n        <div>\n          <Typography\n            variant=\"h3\"\n            style={{\n              fontWeight: 300,\n              whiteSpace: 'nowrap',\n            }}\n          >\n            Wabbajack\n          </Typography>\n          <Typography variant=\"h5\">An automated Modlist Installer</Typography>\n          <Typography variant=\"h6\" style={{ textTransform: 'none' }}>\n            Wabbajack can reproduce an entire modding setup on another machine\n            <b> without bundling any assets or re-distributing any mods</b>.\n          </Typography>\n          <Grid\n            alignContent=\"flex-start\"\n            alignItems=\"flex-start\"\n            direction=\"row\"\n            container\n            justify=\"space-between\"\n            style={{\n              marginTop: '16px',\n            }}\n          >\n            <Grid item style={{ width: '55%' }}>\n              <Button\n                href={process.env.REACT_APP_WABBAJACKEXE}\n                fullWidth\n                color=\"secondary\"\n                variant=\"contained\"\n              >\n                Download\n              </Button>\n            </Grid>\n            <Grid item style={{ width: '30%' }}>\n              <Button\n                href={process.env.REACT_APP_DISCORD_LINK}\n                fullWidth\n                color=\"secondary\"\n                variant=\"outlined\"\n              >\n                Discord\n              </Button>\n            </Grid>\n          </Grid>\n        </div>\n      </Container>\n\n      <Container style={{ marginTop: '16px' }}>\n        <Typography variant=\"h5\">Installing a Modlist</Typography>\n        <Typography variant=\"body1\">\n          The process of installing a Modlist is designed to be as quick as\n          possible. If you haven't already found a Modlist you want to install,\n          you can head over to our{' '}\n          <MaterialLink href=\"/modlists/gallery\" isLink>\n            Gallery\n          </MaterialLink>{' '}\n          to find a selection of curated Modlists.\n        </Typography>\n        <Typography variant=\"body1\">\n          The readme of each Modlist will take you through the entire process on\n          how to correctly install it. Most of the time it's just a matter of\n          having a clean game installation, loading the Modlist in Wabbajack and\n          pressing the start button.\n        </Typography>\n      </Container>\n\n      <Container style={{ marginTop: '16px' }}>\n        <Typography variant=\"h5\">Compiling a Modlist</Typography>\n        <Typography variant=\"body1\">\n          Compiling/Creating a Modlist with Wabbajack is similar to installing\n          one in the sense that you don't really have to do anything in\n          Wabbajack itself. You do need good preparation if you want the\n          compilation to succeed.\n        </Typography>\n        <Typography variant=\"body1\">\n          To get started with creating your own Modlist, check the{' '}\n          <MaterialLink href=\"/info/general\" isLink>\n            General Information\n          </MaterialLink>{' '}\n          page on how Wabbajack works and read our guide{' '}\n          <Link href=\"https://github.com/wabbajack-tools/wabbajack#creating-your-own-modlist\">\n            here\n          </Link>\n          .\n        </Typography>\n      </Container>\n\n      <Container style={{ marginTop: '16px' }}>\n        <Typography variant=\"h5\">Troubleshooting</Typography>\n        <Typography variant=\"body1\">\n          If you have trouble installing a Modlist, head over to our{' '}\n          <Link href={process.env.REACT_APP_DISCORD_LINK}>Discord</Link> and ask\n          for help in the respective channels. If you installed a Modlist which\n          is not in the gallery than ask the person who compiled it for support.{' '}\n          <b>Do not ask for support on other Discord servers or on reddit!</b>\n        </Typography>\n      </Container>\n\n      <Container style={{ marginTop: '16px' }}>\n        <Typography variant=\"h5\">Further Information:</Typography>\n        <Typography variant=\"body1\">\n          <MaterialLink isLink href=\"/info/general\">\n            General Information\n          </MaterialLink>{' '}\n          about how Wabbajack works.\n        </Typography>\n        <Typography variant=\"body1\">\n          For{' '}\n          <MaterialLink isLink href=\"/info/modauthors\">\n            Mod Authors\n          </MaterialLink>\n          .\n        </Typography>\n        <Typography variant=\"body1\">\n          For{' '}\n          <Link href=\"https://github.com/wabbajack-tools/wabbajack#creating-your-own-modlist\">\n            Modlist Authors\n          </Link>\n          .\n        </Typography>\n        <Typography variant=\"body1\">\n          For{' '}\n          <Link href=\"https://github.com/wabbajack-tools/wabbajack/blob/master/CONTRIBUTING.md\">\n            Contributors\n          </Link>\n          .\n        </Typography>\n      </Container>\n    </Container>\n  );\n};\n\nexport default HomePage;\n","import * as React from 'react';\n\nimport { Container, Typography, Link } from '@material-ui/core';\n\nconst GeneralInfoPage: React.FC = () => {\n  return (\n    <Container maxWidth=\"md\">\n      <Typography variant=\"h4\">General Information</Typography>\n\n      {/* TERMINOLOGY */}\n\n      <Typography variant=\"h5\" style={{ marginTop: '16px' }}>\n        Terminology:\n      </Typography>\n      <Typography variant=\"subtitle1\" style={{ marginTop: '8px' }}>\n        Modpack\n      </Typography>\n      <Typography variant=\"body1\">\n        A Modpack is a collection of mods put together in a single file. Often\n        compressed into a <code>zip</code>, <code>7z</code> or <code>rar</code>{' '}\n        archive. This single file contains an entire modding setup and is very\n        large in size as every file from every mod is included. Uploading a\n        Modpack to the Internet means distributing possible copyrighted content\n        and has lead to huge backlash in other modding scenes.\n      </Typography>\n      <Typography variant=\"subtitle1\" style={{ marginTop: '8px' }}>\n        Modlist (Written guide)\n      </Typography>\n      <Typography variant=\"body1\">\n        A written guide like{' '}\n        <Link href=\"https://wiki.step-project.com/STEP:2.10.0\">STEP</Link>,{' '}\n        <Link href=\"https://wiki.nexusmods.com/index.php/User:Darkladylexy/Lexys_LOTD_SE\">\n          Lexys LOTD SE Mod Guide\n        </Link>{' '}\n        or{' '}\n        <Link href=\"https://thephoenixflavour.com/\">The Phoenix Flavour</Link>{' '}\n        tell the user what, when and how to download and install. In order to\n        reproduce the same setup of the guide author you will pick up a lot of\n        new modding tricks and learn something unknown to you before. Depending\n        on the depth of the guide the process not only takes a very long time\n        but is very error prone if the user does not read everything carefully.\n      </Typography>\n      <Typography variant=\"subtitle1\" style={{ marginTop: '8px' }}>\n        Modlist (Wabbajack)\n      </Typography>\n      <Typography variant=\"body1\">\n        A Wabbajack Modlist can be compared to a written guide except it is not\n        written for humans but for machines. The resulting{' '}\n        <code>.wabbajack</code> file contains instructions on what, when and how\n        to download and install in order to replicate the entire setup of the\n        author without bundling any assets.\n      </Typography>\n\n      <Typography variant=\"subtitle1\" style={{ marginTop: '8px' }}>\n        Why is this important?\n      </Typography>\n      <Typography variant=\"body1\">\n        Understanding the differences between Modpacks and Modlists is important\n        to us because each word comes with a different meaning but they are\n        still seen as one and the same to some people. In the early days of\n        Wabbajack we had to deal with the main Skyrim modding group from the\n        Nexus and r/Skyrimmods. Of course we prevailed and our user count is now\n        around twenty thousand but there are still other communities out there\n        we have yet to reach out to and come in contact with.\n      </Typography>\n\n      {/* HOW IT WORKS */}\n\n      <Typography variant=\"h5\" style={{ marginTop: '16px' }}>\n        How Wabbajack works:\n      </Typography>\n      {/* COMPILATION */}\n      <Typography variant=\"subtitle1\" style={{ marginTop: '8px' }}>\n        Compilation\n      </Typography>\n      <Typography variant=\"body1\">\n        To compile a Modlist, Wabbajack needs a lot of information and has to\n        know from where every file came from. We start by indexing{' '}\n        <b>everything</b>: your game, downloads and installation folder and\n        create a <i>VFS cache file</i> containing the location and{' '}\n        <Link href=\"https://github.com/Cyan4973/xxHash\">xxHash</Link> of every\n        indexed file.\n        <br />\n        After WJ indexed all files and done some pre-validating of the archives,\n        we run every file through a <i>Compilation Stack</i>. This stack\n        contains <i>Compilation Steps</i> that find out from where a file came\n        from. It starts at the top and falls through until one step assigns the\n        file a reason to exist and origin. Some steps simply ignore files like\n        logs, caches or crash dumbs while other deconstruct BSAs, include zEdit\n        patches, patch the game ESMs or re-target paths in config files.\n        <br />\n        The Compilation Stack is the meat of the entire process and will result\n        in a list of directives that will later be saved in the output file. If\n        one file dropped out of the stack it will have no match and the\n        compilation will fail.\n        <br />\n        The last steps during compilation are all about verifying whether or not\n        the archive is still downloadable, if the zEdit merges are valid and if\n        the user can actually install the modlist.\n      </Typography>\n      {/* INSTALLATION */}\n      <Typography variant=\"subtitle1\" style={{ marginTop: '8px' }}>\n        Installation\n      </Typography>\n      <Typography variant=\"body1\">\n        Wabbajack is made to be a one click installer: You start the\n        application, load the Modlist and hit Install.\n        <br />\n        We start, same as the Compilation, by hashing every file to find out if\n        certain archives are already present. This means that you can close\n        Wabbajack at any time and return to the installation when you got the\n        time as the program will find what needs to be downloaded or installed.\n        <br />\n        Wabbajack can download from a multitude of different websites including,\n        but not limited to, Nexus Mods, GitHub, MEGA, MediaFire, GDrive,\n        Dropbox, AFKMods, BethesdaNet, DeadlyStream, LoversLab, ModDB, Steam\n        Workshop, TESAlliance, VectorPlexus, ENBSeries and more!\n        <br />\n        After downloading, Wabbajack starts going through all Directives within\n        the Modlist and installs the files according to the instructions of\n        those Directives.\n      </Typography>\n    </Container>\n  );\n};\n\nexport default GeneralInfoPage;\n","import * as React from 'react';\n\nimport MaterialLink from 'components/MaterialLink';\n\nimport { Container, Typography, Link } from '@material-ui/core';\n\nconst ModAuthorsInfoPage: React.FC = () => {\n  return (\n    <Container maxWidth=\"md\">\n      <Typography variant=\"h4\">Information for Mod Authors</Typography>\n      <Typography variant=\"body2\" component=\"i\">\n        Before reading this section, make sure you have read the{' '}\n        <MaterialLink isLink href=\"/info/general\">\n          General Information\n        </MaterialLink>{' '}\n        page.\n      </Typography>\n      <Typography variant=\"body1\" style={{ paddingTop: '4px' }}>\n        Depending on which modding scene you came from, you may have different\n        experiences with <i>Modpacks</i>, <i>Modlists</i> and\n        <i> Automated Installers</i>. It is important to understand what and how\n        Wabbajack operates before forming an opinion.\n      </Typography>\n      <Typography variant=\"h6\" style={{ marginTop: '16px' }}>\n        Common questions\n      </Typography>\n      <Typography variant=\"subtitle1\" style={{ marginTop: '8px' }}>\n        How does Wabbajack download mods from the Nexus?\n      </Typography>\n      <Typography>\n        Wabbajack uses the official{' '}\n        <Link href=\"https://app.swaggerhub.com/apis-docs/NexusMods/nexus-mods_public_api_params_in_form_data/1.0#/\">\n          Nexus API\n        </Link>{' '}\n        to retrieve download links from the Nexus. Downloads using the API are\n        the same as direct downloads from the Nexus meaning this will count\n        towards your download count and give you donation points.\n      </Typography>\n      <Typography variant=\"subtitle1\" style={{ marginTop: '8px' }}>\n        How can I opt out of having my mod be included in a Modlist?\n      </Typography>\n      <Typography>\n        We use the official Nexus API to download mods. Everyone who has access\n        to the Nexus can download your mod. The Nexus does not lock out API\n        access based on <i>author preferences</i>.\n      </Typography>\n      <Typography variant=\"subtitle1\" style={{ marginTop: '8px' }}>\n        Will the end user even know they use my mod?\n      </Typography>\n      <Typography>\n        Your mod is exposed in several layers of the user experience when\n        installing a Modlist. Before the installation even starts, the user has\n        access to the manifest of the Modlist. This contains a list of all mods\n        to be installed as well as the authors, version, size, links and more\n        meta data depending on origin.\n        <br />\n        Wabbajack will start a Slideshow during installation which features all\n        mods to be installed in random order. The Slideshow displays the title,\n        author, main image, description, version and a link to the Nexus page.\n        <br />\n        After installation the user most likely needs to check the instructions\n        of the Modlist for recommended MCM options. If your mod has an MCM and\n        needs a lot of configuring than your mod will likely be featured in the\n        instructions.\n        <br />\n        Some Modlists have an extensive README that contains a section dedicated\n        to some of the important mods in the setup with links to the mod page\n        and mod author page.\n      </Typography>\n      <Typography variant=\"subtitle1\" style={{ marginTop: '8px' }}>\n        A Wabbajack user reports problems with my mod, how should I respond?\n      </Typography>\n      <Typography>\n        Depending on the Modlist used by the user, its best to handle them like\n        any other user. Our curated Modlists have dedicated support channels\n        behind them on our Discord so redirect them to our Discord for those\n        lists.\n      </Typography>\n      <Typography variant=\"subtitle1\" style={{ marginTop: '8px' }}>\n        What if my mod is not on the Nexus?\n      </Typography>\n      <Typography>\n        As long as your mod is accessible and available on the Internet, we can\n        can quickly create a downloader for whatever site you are hosting your\n        mods on. Even if the site does not have an API or requires a login, we\n        can always just resort to our internal browser and download the mod as\n        if a user would go to the website using Firefox/Chrome and click the\n        download button.\n      </Typography>\n    </Container>\n  );\n};\n\nexport default ModAuthorsInfoPage;\n","import * as React from 'react';\nimport { Route } from 'react-router';\n\nimport GeneralInfoPage from './general';\nimport ModAuthorInfoPage from './modauthors';\n\nconst InfoPage: React.FC = () => {\n  return (\n    <React.Fragment>\n      <Route exact path=\"/info/general\" component={GeneralInfoPage} />\n      <Route exact path=\"/info/modauthors\" component={ModAuthorInfoPage} />\n    </React.Fragment>\n  );\n};\n\nexport default InfoPage;\n","import * as React from 'react';\n\n/**\n * Utility class for PureComponents\n */\nexport abstract class ReactAxiosComponent<\n  P = {},\n  S = {},\n  SS = any\n> extends React.PureComponent<P, S, SS> {\n  public componentDidMount() {\n    this.ensureDataFetched();\n  }\n\n  public componentDidUpdate() {\n    this.ensureDataFetched();\n  }\n\n  /**\n   * Use this function to request data using the action from redux\n   * mapped to props\n   */\n  abstract ensureDataFetched(): void;\n\n  /**\n   * Display an error in the render function.\n   */\n  abstract showError(): JSX.Element | undefined;\n\n  /**\n   * Display a loading modal in the render function.\n   */\n  abstract showLoading(): JSX.Element | undefined;\n\n  /**\n   * Display the content after the data was loaded and there\n   * are no errors.\n   */\n  abstract showContent(): JSX.Element | undefined;\n}\n\n/**\n * State for sub-stores that use axios in actions\n */\nexport interface AxiosState {\n  isLoading: boolean;\n  error?: AxiosError;\n}\n\nexport interface AxiosError {\n  message: string;\n  response: AxiosResponse;\n  request: AxiosRequest;\n  extraData?: string | undefined;\n}\n\nexport interface AxiosRequest {\n  response: string;\n  responseText: string;\n  responseURL: string;\n  status: number;\n  statusText: string;\n}\n\nexport interface AxiosResponse {\n  data: string;\n  status: number;\n  statusText: string;\n}\n","import * as React from 'react';\n\nimport { Typography } from '@material-ui/core';\n\ninterface LoadingProps {\n  message: string;\n}\n\nconst Loading: React.FC<LoadingProps> = (props) => {\n  return (\n    <React.Fragment>\n      <Typography variant=\"h6\">{props.message}</Typography>\n      {props.children}\n    </React.Fragment>\n  );\n};\n\nexport default Loading;\n","import * as React from 'react';\n\nimport { AxiosError } from 'types/axios';\n\nimport { Typography, Link } from '@material-ui/core';\n\ninterface ErrorProps {\n  error: AxiosError;\n}\n\nconst Error: React.FC<ErrorProps> = (props) => {\n  return (\n    <React.Fragment>\n      <Typography variant=\"h6\">Error</Typography>\n      <Typography variant=\"body1\">\n        An error occurred while fetching data. Please report this on the{' '}\n        <Link href={process.env.REACT_APP_DISCORD_LINK}>Discord server</Link>.\n      </Typography>\n      <Typography variant=\"subtitle1\">\n        Message: {props.error.message}\n      </Typography>\n      {props.children}\n    </React.Fragment>\n  );\n};\n\nexport default Error;\n","import * as React from 'react';\n\nimport { Typography, Link } from '@material-ui/core';\n\nconst DataError: React.FC = (props) => {\n  return (\n    <React.Fragment>\n      <Typography variant=\"h6\">Error</Typography>\n      <Typography variant=\"body1\">\n        Data fetched is corrupted. Please report this on the{' '}\n        <Link href={process.env.REACT_APP_DISCORD_LINK}>Discord server</Link>.\n      </Typography>\n      {props.children}\n    </React.Fragment>\n  );\n};\n\nexport default DataError;\n","/**\n * Converts a machine name of a game to a human readable one\n * @param game machine name of a game\n * @returns human readable name\n */\nexport const getGameName = (game: string | undefined) => {\n  let gameName = 'UNKNOWN';\n  if (game === undefined) return gameName;\n  switch (game.toLocaleLowerCase()) {\n    case 'skyrim':\n      gameName = 'Skyrim';\n      break;\n    case 'oblivion':\n      gameName = 'Oblivion';\n      break;\n    case 'skyrimspecialedition':\n      gameName = 'Skyrim Special Edition';\n      break;\n    case 'enderal':\n      gameName = 'Enderal';\n      break;\n    case 'fallout4vr':\n      gameName = 'Fallout 4 VR';\n      break;\n    case 'fallout4':\n      gameName = 'Fallout 4';\n      break;\n    case 'skyrimvr':\n      gameName = 'Skyrim VR';\n      break;\n    case 'fallout3':\n      gameName = 'Fallout 3';\n      break;\n    case 'falloutnewvegas':\n      gameName = 'Fallout New Vegas';\n      break;\n    case 'morrowind':\n      gameName = 'Morrowind';\n      break;\n    default:\n      gameName = 'UNKNOWN';\n      break;\n  }\n\n  return gameName;\n};\n","import * as React from 'react';\nimport { v4 as uuidv4 } from 'uuid';\nimport underscore from 'underscore';\n\nimport { getGameName } from 'utils/games';\nimport { ModlistMetaData } from 'types/modlist';\n\nimport MaterialLink from 'components/MaterialLink';\n\nimport { Skeleton } from '@material-ui/lab';\n\nimport {\n  Card,\n  CardHeader,\n  CardActions,\n  CardContent,\n  CardMedia,\n  Typography,\n  Divider,\n  Grid,\n  Chip,\n} from '@material-ui/core';\n\ninterface ModlistGalleryCardProps {\n  modlist: ModlistMetaData;\n}\n\nconst ModlistGalleryCard: React.FC<ModlistGalleryCardProps> = (props) => {\n  const { modlist } = props;\n  const { title, description, author, game, tags, links, nsfw } = modlist;\n  const { image, machineURL } = links;\n\n  return (\n    <Card>\n      <CardHeader title={title} />\n      <CardMedia component=\"img\" alt={title} image={image} />\n      <CardContent>\n        <Typography variant=\"subtitle1\">By {author}</Typography>\n        <Typography variant=\"body2\" color=\"textSecondary\">\n          {description}\n        </Typography>\n        <Divider style={{ marginTop: '8px', marginBottom: '8px' }} />\n        <Grid container spacing={1}>\n          <Grid item key={uuidv4()}>\n            <Chip size=\"small\" label={getGameName(game)} color=\"primary\" />\n          </Grid>\n          {nsfw ? (\n            <Grid item key={uuidv4()}>\n              <Chip size=\"small\" label=\"NSFW\" color=\"primary\" />\n            </Grid>\n          ) : (\n            <div></div>\n          )}\n          {underscore.map(tags, (tag) => {\n            return (\n              <Grid item key={uuidv4()}>\n                <Chip size=\"small\" label={tag} color=\"primary\" />\n              </Grid>\n            );\n          })}\n        </Grid>\n      </CardContent>\n      <CardActions>\n        <MaterialLink\n          size=\"small\"\n          buttonColor=\"secondary\"\n          href={`/modlists/gallery/${machineURL}`}\n        >\n          View\n        </MaterialLink>\n        <Grid container alignItems=\"flex-start\" justify=\"flex-end\">\n          <MaterialLink href={`/modlists/search/${machineURL}`}>\n            Archive Search\n          </MaterialLink>\n        </Grid>\n      </CardActions>\n    </Card>\n  );\n};\n\nexport const SkeletonCard: React.FC = () => {\n  return (\n    <Card style={{ width: '100%' }}>\n      <CardHeader\n        component={Skeleton}\n        animation={false}\n        variant=\"text\"\n        height={50}\n        style={{ marginLeft: '4px', marginRight: '4px' }}\n      />\n      <CardMedia\n        component={Skeleton}\n        animation={false}\n        variant=\"rect\"\n        height={300}\n      />\n      <CardContent>\n        <Skeleton animation={false} variant=\"text\" height={100} />\n      </CardContent>\n    </Card>\n  );\n};\n\nexport default ModlistGalleryCard;\n","import * as React from 'react';\nimport { v4 as uuidv4 } from 'uuid';\nimport _ from 'underscore';\n\nimport { getGameName } from 'utils/games';\nimport { ModlistMetaData } from 'types/modlist';\n\nimport GalleryCard, { SkeletonCard } from './GalleryCard';\n\nimport {\n  Grid,\n  FormControl,\n  FormHelperText,\n  MenuItem,\n  Select,\n  Typography,\n  Link,\n  Checkbox,\n  FormControlLabel,\n} from '@material-ui/core';\n\ninterface ModlistGalleryProps {\n  modlists: ModlistMetaData[];\n  isLoading: boolean;\n}\n\ninterface ModlistsGalleryState {\n  selectedGame: string;\n  showNSFW: boolean;\n}\n\ninterface IGame {\n  gameID: string;\n  gameName: string;\n}\n\nclass ModlistGallery extends React.PureComponent<\n  ModlistGalleryProps,\n  ModlistsGalleryState\n> {\n  constructor(props: ModlistGalleryProps) {\n    super(props);\n\n    this.state = {\n      selectedGame: '',\n      showNSFW: false,\n    };\n  }\n\n  private onChange(\n    event: React.ChangeEvent<{ name?: string | undefined; value: unknown }>\n  ): void {\n    this.setState({\n      ...this.state,\n      selectedGame: event.target.value as string,\n    });\n  }\n\n  private onCheck(): void {\n    this.setState({\n      ...this.state,\n      showNSFW: !this.state.showNSFW,\n    });\n  }\n\n  private skeletons = (count: number): JSX.Element[] => {\n    const list = [];\n    for (let i = 0; i < count; i++) {\n      list.push(\n        <Grid item xs={12} sm={12} md={6} lg={6} xl={6} key={uuidv4()}>\n          <SkeletonCard />\n        </Grid>\n      );\n    }\n    return list;\n  };\n\n  render(): JSX.Element {\n    const gamesList: Array<IGame> = [];\n\n    if (!this.props.modlists) return <div></div>;\n\n    _.map(this.props.modlists, (modlist) => {\n      const foundGame = _.find(\n        gamesList,\n        (game) => game.gameID === modlist.game\n      );\n      if (!foundGame) {\n        gamesList.push({\n          gameID: modlist.game,\n          gameName: getGameName(modlist.game),\n        });\n      }\n    });\n\n    gamesList.sort((a, b) => {\n      if (a.gameName < b.gameName) return -1;\n      if (a.gameName > b.gameName) return 1;\n      return 0;\n    });\n\n    return (\n      <React.Fragment>\n        <Typography variant=\"h4\">Gallery</Typography>\n        <Grid container alignItems=\"flex-start\" justify=\"flex-end\">\n          <Grid item>\n            <FormControlLabel\n              control={\n                <Checkbox\n                  name=\"enableNSFW\"\n                  checked={this.state.showNSFW}\n                  onChange={this.onCheck.bind(this)}\n                />\n              }\n              label=\"Show NSFW\"\n            />\n          </Grid>\n          <Grid item>\n            <FormControl>\n              <Select\n                autoWidth\n                displayEmpty\n                value={this.state.selectedGame}\n                onChange={this.onChange.bind(this)}\n              >\n                <MenuItem value=\"\">All</MenuItem>\n                {_.map(gamesList, (game) => {\n                  return (\n                    <MenuItem value={game.gameID} key={uuidv4()}>\n                      {game.gameName}\n                    </MenuItem>\n                  );\n                })}\n              </Select>\n              <FormHelperText>Filter by game</FormHelperText>\n            </FormControl>\n          </Grid>\n        </Grid>\n        <Grid\n          container\n          direction=\"row\"\n          spacing={4}\n          style={{ marginTop: '16px' }}\n        >\n          {this.props.isLoading\n            ? this.skeletons(5)\n            : _.filter(this.props.modlists, (modlist) => {\n                if (modlist.tags.includes('hidden')) return false;\n                if (!this.state.showNSFW && modlist.nsfw) return false;\n                if (\n                  this.state.selectedGame !== '' &&\n                  modlist.game !== this.state.selectedGame\n                )\n                  return false;\n\n                return true;\n              }).map((modlist) => {\n                return (\n                  <Grid\n                    item\n                    xs={12}\n                    sm={12}\n                    md={6}\n                    lg={6}\n                    xl={6}\n                    key={uuidv4()}\n                  >\n                    <GalleryCard modlist={modlist} />\n                  </Grid>\n                );\n              })}\n        </Grid>\n        <Typography variant=\"h6\" style={{ marginTop: '16px' }}>\n          Want your Modlist to appear in this Gallery?\n        </Typography>\n        <Typography variant=\"body1\">\n          Simply head over to our{' '}\n          <Link href={process.env.REACT_APP_DISCORD_LINK}>Discord</Link> server\n          and go to the <b>#modlist-development-info</b> channel to fill out the\n          submission.\n        </Typography>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default ModlistGallery;\n","export const DateTimeFormatOptions: Intl.DateTimeFormatOptions = {\n  year: 'numeric',\n  month: 'numeric',\n  day: 'numeric',\n  hour: 'numeric',\n  minute: 'numeric',\n  second: 'numeric',\n};\n\nexport const getDateString = (\n  date: Date,\n  local?: string | undefined\n): string => {\n  const dateString = Intl.DateTimeFormat(\n    local ? local : 'default',\n    DateTimeFormatOptions\n  ).format(date);\n  return dateString;\n};\n\nexport const getGitHubLinkFromRaw = (rawURL: string): string | undefined => {\n  if (!rawURL.startsWith('https://raw.githubusercontent.com')) return undefined;\n  const base = rawURL.replace('https://raw.githubusercontent.com/', '');\n  const split = base.split('/');\n  const url = `https://github.com/${split[0]}/${split[1]}/blob/${split[2]}/`;\n\n  return url;\n};\n\nexport const randomString = (length: number) => {\n  const characters =\n    'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\n  const charactersLength = characters.length;\n  let result = '';\n  for (let i = 0; i < length; i++) {\n    result = result.concat(\n      characters.charAt(Math.floor(Math.random() * charactersLength))\n    );\n  }\n  return result;\n};\n\nconst Suffix = ['B', 'KB', 'MB', 'GB', 'TB', 'PB', 'EB'];\n\nexport const toFileSizeString = (size: number) => {\n  if (size === 0) return `${size}${Suffix[0]}`;\n  const bytes = Math.abs(size);\n  const place = Math.floor(Math.log(bytes) / Math.log(1024));\n  const num = Math.round(bytes / Math.pow(1024, place));\n  return Math.sign(size) * num + Suffix[place];\n};\n","import * as React from 'react';\nimport { MarkdownOptions, ComponentOverride } from 'markdown-to-jsx';\nimport { Typography, Link } from '@material-ui/core';\nimport { getGitHubLinkFromRaw } from './other';\nimport { CSSProperties } from '@material-ui/core/styles/withStyles';\n\nconst headingStyle: CSSProperties = {\n  marginTop: '24px',\n  marginBottom: '16px',\n  fontWeight: 600,\n  lineHeight: '1.25',\n};\n\nconst topHeadingStyle: CSSProperties = {\n  paddingBottom: '.3em',\n  borderBottom: '1px solid #eaecef',\n};\n\nconst options = (\n  baseURL?: string | undefined,\n  externalURL?: string | undefined\n): MarkdownOptions => {\n  return {\n    overrides: {\n      h1: {\n        component: Typography,\n        props: {\n          variant: 'h1',\n          style: {\n            ...headingStyle,\n            ...topHeadingStyle,\n            fontSize: '2em',\n            marginTop: '0 !important',\n          },\n        },\n      },\n      h2: {\n        component: Typography,\n        props: {\n          variant: 'h2',\n          style: {\n            ...headingStyle,\n            ...topHeadingStyle,\n            fontSize: '1.5em',\n          },\n        },\n      },\n      h3: {\n        component: Typography,\n        props: {\n          variant: 'h3',\n          style: {\n            ...headingStyle,\n            fontSize: '1.25em',\n          },\n        },\n      },\n      h4: {\n        component: Typography,\n        props: {\n          variant: 'h4',\n          style: {\n            ...headingStyle,\n            fontSize: '1em',\n            textAlign: 'initial',\n          },\n        },\n      },\n      p: {\n        component: Typography,\n        props: {\n          variant: 'body2',\n          style: {\n            marginTop: '0',\n            marginBottom: '16px',\n            fontSize: '16px',\n            lineHeight: '1.5',\n            wordWrap: 'break-word',\n          },\n        },\n      },\n      /*a: {\n        component: Link,\n      },*/\n      img: {\n        component: 'img',\n        props: {\n          style: {\n            //width: '100%',\n            maxWidth: '100%',\n            marginTop: '8px',\n            marginBottom: '8px',\n          },\n        },\n      },\n    },\n    createElement(type, props, children) {\n      if (type === 'img') {\n        const anyProps = props as any;\n        if (anyProps.src === undefined)\n          return React.createElement(type, props, children);\n        if (externalURL === undefined)\n          return React.createElement(type, props, children);\n\n        const src = anyProps.src as string;\n        if (src.startsWith('https://' || src.startsWith('http://')))\n          return React.createElement(type, props, children);\n        //console.log(`src: ${src}`);\n        //console.log(`externalURL: ${externalURL}`);\n        const split = externalURL.split('/');\n        const url = externalURL.replace(split[split.length - 1], '');\n        anyProps.src = `${url}${src}`;\n        //console.log(`final src: ${anyProps.src}`);\n\n        return React.createElement(type, anyProps, children);\n      }\n\n      if (type !== 'a') return React.createElement(type, props, children);\n\n      /*const anyType = type as any;\n      if (anyType.options === undefined)\n        return React.createElement(type, props, children);\n      if (anyType.options.name === undefined)\n        return React.createElement(type, props, children);\n\n      const name = anyType.options.name as string;\n      if (name !== 'MuiLink') return React.createElement(type, props, children);*/\n\n      const anyProps = props as any;\n      if (anyProps.href === undefined)\n        return React.createElement(type, props, children);\n\n      let href = anyProps.href as string;\n      if (href.startsWith('#')) {\n        if (baseURL === undefined) {\n          return React.createElement(type, props, children);\n        }\n\n        anyProps.href = `${baseURL}${href}`;\n      } else if (href.endsWith('.md') && !href.startsWith('http')) {\n        if (externalURL === undefined)\n          return React.createElement(type, props, children);\n\n        if (externalURL.startsWith('https://raw.githubusercontent.com')) {\n          anyProps.href = `${getGitHubLinkFromRaw(externalURL)}${href}`;\n        }\n      }\n\n      return React.createElement(type, anyProps, children);\n    },\n  };\n};\n\nexport default options;\n","import * as React from 'react';\nimport { connect, ConnectedProps } from 'react-redux';\nimport { RouteComponentProps } from 'react-router';\nimport { v4 as uuidv4 } from 'uuid';\nimport _ from 'underscore';\nimport Markdown from 'markdown-to-jsx';\n\nimport { ApplicationState } from 'store';\nimport * as ModlistInfoStore from 'store/ModlistInfoStore';\n\nimport { getGameName } from 'utils/games';\nimport { ModlistMetaData } from 'types/modlist';\nimport options from 'utils/markdown.config';\n\nimport { ReactAxiosComponent } from 'types/axios';\nimport { Loading, Error, DataError } from 'components/Fetching';\nimport MaterialLink from 'components/MaterialLink';\n\nimport { Grid, Typography, Button, Chip, Divider } from '@material-ui/core';\n\ntype PropsFromRedux = ConnectedProps<typeof connector>;\n\ninterface Props {\n  modlists: ModlistMetaData[];\n}\n\ntype ModlistInfoProps = Props &\n  typeof ModlistInfoStore.actionCreator &\n  ModlistInfoStore.ModlistInfoState &\n  PropsFromRedux &\n  RouteComponentProps<{ url: string }>;\n\ninterface ModlistInfoState {\n  currentModlist: ModlistMetaData | undefined;\n}\n\nexport class ModlistInfo extends ReactAxiosComponent<\n  ModlistInfoProps,\n  ModlistInfoState\n> {\n  constructor(props: ModlistInfoProps) {\n    super(props);\n\n    this.state = {\n      currentModlist: undefined,\n    };\n  }\n\n  ensureDataFetched(): void {\n    if (this.props.modlists && this.props.modlists.length >= 0) {\n      const modlist = _.find(this.props.modlists, (current) => {\n        return current.links.machineURL === this.props.match.params.url;\n      });\n\n      if (modlist === undefined) return;\n      if (!modlist.links.readme.endsWith('.md')) return;\n\n      this.setState({\n        ...this.state,\n        currentModlist: modlist,\n      });\n\n      this.props.requestModlistInfo(\n        modlist.links.readme,\n        modlist.links.machineURL\n      );\n    }\n    return;\n  }\n\n  showError(): JSX.Element | undefined {\n    if (this.props.isLoading) return;\n    if (!this.props.error) return;\n\n    if (\n      this.props.error.extraData === this.state.currentModlist?.links.machineURL\n    )\n      return <Error error={this.props.error} />;\n  }\n\n  showLoading(): JSX.Element | undefined {\n    if (this.props.error) {\n      if (\n        this.props.error.extraData ===\n        this.state.currentModlist?.links.machineURL\n      )\n        return;\n    }\n    if (!this.props.isLoading) return;\n    return <Loading message=\"Loading Modlist Readme\" />;\n  }\n\n  showContent(): JSX.Element | undefined {\n    if (this.props.error) {\n      if (\n        this.props.error.extraData ===\n        this.state.currentModlist?.links.machineURL\n      )\n        return;\n    }\n    if (this.props.isLoading) return;\n\n    if (!this.props.modlists) return <DataError />;\n    if (this.props.modlists.length === 0) return <DataError />;\n\n    if (!this.state.currentModlist) return <DataError />;\n    if (!this.props.infoMap) return <DataError />;\n\n    if (!this.props.infoMap.has(this.state.currentModlist.links.machineURL))\n      return <DataError />;\n\n    const {\n      title,\n      description,\n      version,\n      author,\n      game,\n      tags,\n      links,\n    } = this.state.currentModlist;\n    const { image } = links;\n\n    return (\n      <React.Fragment>\n        {' '}\n        <Typography variant=\"h4\" style={{ marginBottom: '8px' }}>\n          {title}\n        </Typography>\n        <img\n          alt={title}\n          src={image}\n          style={{ width: '100%', borderRadius: '1%' }}\n        />\n        <Typography variant=\"caption\">\n          Created by {author}, current version: {version}\n        </Typography>\n        <Grid container spacing={1}>\n          <Grid item key={uuidv4()}>\n            <Chip size=\"small\" label={getGameName(game)} color=\"primary\" />\n          </Grid>\n          {_.map(tags, (tag) => {\n            return (\n              <Grid item key={uuidv4()}>\n                <Chip size=\"small\" label={tag} color=\"primary\" />\n              </Grid>\n            );\n          })}\n        </Grid>\n        <Divider style={{ marginTop: '8px', marginBottom: '8px' }} />\n        <Typography variant=\"subtitle2\">{description}</Typography>\n        <Divider style={{ marginTop: '8px', marginBottom: '8px' }} />\n        <Markdown\n          options={options(\n            `/modlists/gallery/${this.state.currentModlist.links.machineURL}`,\n            `${this.state.currentModlist.links.readme}`\n          )}\n        >\n          {this.props.infoMap.get(this.state.currentModlist.links.machineURL)}\n        </Markdown>\n        <Divider style={{ marginTop: '8px', marginBottom: '8px' }} />\n        {/*<Button href={download} color=\"secondary\">\n          Download\n          </Button>*/}\n      </React.Fragment>\n    );\n  }\n\n  render(): JSX.Element {\n    return (\n      <React.Fragment>\n        <MaterialLink href=\"/modlists/gallery\">Back to Gallery</MaterialLink>\n        {this.showLoading()}\n        {this.showError()}\n        {this.showContent()}\n      </React.Fragment>\n    );\n  }\n}\n\nconst connector = connect(\n  (state: ApplicationState, ownProps: Props) => ({\n    ...state.modlistInfo,\n    ...ownProps,\n  }),\n  ModlistInfoStore.actionCreator\n);\n\nexport default connector(ModlistInfo as any);\n","import * as React from 'react';\nimport { Route } from 'react-router';\n\nimport { ModlistMetaData } from 'types/modlist';\n\nimport Gallery from './Gallery';\nimport ModlistInfo from './info/ModlistInfo';\n\nimport { Container } from '@material-ui/core';\n\ninterface ModlistsGalleryPageProps {\n  modlists: ModlistMetaData[];\n  isLoading: boolean;\n}\n\nexport class ModlistsGalleryPage extends React.PureComponent<\n  ModlistsGalleryPageProps\n> {\n  render(): JSX.Element {\n    return (\n      <React.Fragment>\n        <Container\n          maxWidth=\"lg\"\n          style={{ paddingTop: '16px', paddingBottom: '16px' }}\n        >\n          <Route\n            exact\n            path=\"/modlists/gallery\"\n            render={() => (\n              <Gallery\n                modlists={this.props.modlists}\n                isLoading={this.props.isLoading}\n              />\n            )}\n          />\n          <Route\n            path=\"/modlists/gallery/:url\"\n            render={(props) => (\n              <ModlistInfo {...props} modlists={this.props.modlists} />\n            )}\n          />\n        </Container>\n      </React.Fragment>\n    );\n  }\n}\n","import * as React from 'react';\n\nimport { ModlistStatus } from 'types/modlist';\nimport { getDateString } from 'utils/other';\n\nimport { Link as RoutedLink } from 'react-router-dom';\n\nimport { Grid, Paper, Typography } from '@material-ui/core';\n\nconst clickableTitle: React.CSSProperties = {\n  color: 'white',\n  textTransform: 'uppercase',\n};\n\nconst dot: React.CSSProperties = {\n  marginRight: '8px',\n  height: '25px',\n  width: '25px',\n  borderRadius: '50%',\n  display: 'inline-block',\n};\n\nconst greenDot: React.CSSProperties = {\n  ...dot,\n  backgroundColor: 'green',\n};\n\nconst redDot: React.CSSProperties = {\n  ...dot,\n  backgroundColor: 'red',\n};\n\ninterface DashboardCardProps {\n  status: ModlistStatus;\n}\n\nconst DashboardCard: React.FC<DashboardCardProps> = (props) => {\n  const { status } = props;\n  const { name, checked, failed, passed, has_failures, machineURL } = status;\n  const date = new Date(checked);\n  const dateString = getDateString(date);\n\n  return (\n    <Paper style={{ marginTop: '8px', marginBottom: '8px' }}>\n      <Grid style={{ padding: '8px' }}>\n        {has_failures ? <span style={redDot} /> : <span style={greenDot} />}\n        <Typography\n          variant=\"h6\"\n          component={RoutedLink}\n          to={`status/${machineURL}`}\n          style={clickableTitle}\n        >\n          {name}\n        </Typography>\n        <Typography variant=\"body1\">Passed: {passed}</Typography>\n        <Typography variant=\"body1\">Failed: {failed}</Typography>\n        <Typography variant=\"body2\">Last checked: {dateString}</Typography>\n      </Grid>\n    </Paper>\n  );\n};\n\nexport default DashboardCard;\n","import * as React from 'react';\nimport { v4 as uuidv4 } from 'uuid';\nimport _ from 'underscore';\n\nimport { ModlistStatus } from 'types/modlist';\n\nimport DashboardCard from './DashboardCard';\n\nimport { Grid, Typography } from '@material-ui/core';\n\ninterface DashboardProps {\n  statusList: ModlistStatus[];\n}\n\nconst Dashboard: React.FC<DashboardProps> = (props) => {\n  const failed: ModlistStatus[] = _.chain(props.statusList)\n    .filter((status) => status.has_failures)\n    .sortBy((status) => status.name)\n    .value();\n\n  const success: ModlistStatus[] = _.chain(props.statusList)\n    .filter((status) => !status.has_failures)\n    .sortBy((status) => status.name)\n    .value();\n\n  return (\n    <React.Fragment>\n      <Typography variant=\"h6\">Failing Modlists: {failed.length}</Typography>\n      <Typography variant=\"h6\">Working Modlists: {success.length}</Typography>\n      <Grid container direction=\"row\" spacing={3}>\n        {_.map(failed, (status: ModlistStatus) => {\n          return (\n            <Grid item key={uuidv4()} xs={12} sm={6} md={4} lg={4} xl={4}>\n              <DashboardCard status={status} />\n            </Grid>\n          );\n        })}\n        {_.map(success, (status: ModlistStatus) => {\n          return (\n            <Grid item key={uuidv4()} xs={12} sm={6} md={4} lg={4} xl={4}>\n              <DashboardCard status={status} />\n            </Grid>\n          );\n        })}\n      </Grid>\n    </React.Fragment>\n  );\n};\n\nexport default Dashboard;\n","import * as React from 'react';\n\nimport { ModlistDetailedStatusItem } from 'types/modlist';\n\nimport { ListItem, ListItemText } from '@material-ui/core';\n\nimport { FixedSizeList, ListChildComponentProps } from 'react-window';\n\ninterface VirtualizedListProps {\n  list: ModlistDetailedStatusItem[];\n}\n\nconst VirtualizedList: React.FC<VirtualizedListProps> = (props) => {\n  const { list } = props;\n  const renderRow = (componentProps: ListChildComponentProps) => {\n    const { index, style } = componentProps;\n    const item = list[index];\n    return (\n      <ListItem button style={style} key={index}>\n        <ListItemText primary={item.Archive.Name} />\n      </ListItem>\n    );\n  };\n\n  return (\n    <FixedSizeList\n      itemCount={list.length}\n      height={list.length >= 100 ? 400 : list.length * 20}\n      width=\"100%\"\n      itemSize={20}\n    >\n      {renderRow}\n    </FixedSizeList>\n  );\n};\n\nexport default VirtualizedList;\n","import * as React from 'react';\nimport { connect, ConnectedProps } from 'react-redux';\nimport { RouteComponentProps } from 'react-router';\nimport _ from 'underscore';\n\nimport { ApplicationState } from 'store';\nimport * as StatusStore from 'store/DetailedStatusStore';\n\nimport { getDateString } from 'utils/other';\nimport { ModlistMetaData } from 'types/modlist';\n\nimport { ReactAxiosComponent } from 'types/axios';\nimport { Loading, Error, DataError } from 'components/Fetching';\nimport MaterialLink from 'components/MaterialLink';\nimport VirtualizedList from './VirtualizedList';\n\nimport { Typography } from '@material-ui/core';\n\ntype PropsFromRedux = ConnectedProps<typeof connector>;\n\ninterface Props {\n  modlists: ModlistMetaData[];\n}\n\ntype ModlistStatusProps = Props &\n  typeof StatusStore.actionCreator &\n  StatusStore.ModlistStatusState &\n  PropsFromRedux &\n  RouteComponentProps<{ url: string }>;\n\nexport class ModlistStatus extends ReactAxiosComponent<ModlistStatusProps> {\n  ensureDataFetched(): void {\n    this.props.requestDetailedStatus(this.props.match.params.url);\n  }\n\n  showError(): JSX.Element | undefined {\n    if (this.props.isLoading) return;\n    if (!this.props.error) return;\n    return <Error error={this.props.error} />;\n  }\n\n  showLoading(): JSX.Element | undefined {\n    if (this.props.error) return;\n    if (!this.props.isLoading) return;\n    return <Loading message=\"Loading Modlist Status\" />;\n  }\n\n  showContent(): JSX.Element | undefined {\n    if (this.props.error) return;\n    if (this.props.isLoading) return;\n\n    if (!this.props.modlists) return <DataError />;\n    if (this.props.modlists.length === 0) return <DataError />;\n\n    if (!this.props.statusMap) return <DataError />;\n\n    if (!this.props.statusMap.has(this.props.match.params.url))\n      return <DataError />;\n\n    const status = this.props.statusMap.get(this.props.match.params.url);\n\n    if (!status) return <DataError />;\n\n    const { Name, Checked, HasFailures, Archives } = status;\n    const date = new Date(Checked);\n    const dateString = getDateString(date);\n\n    const failing = _.filter(Archives, (archive) => {\n      return archive.IsFailing;\n    });\n\n    const passing = _.filter(Archives, (archive) => {\n      return !archive.IsFailing;\n    });\n\n    return (\n      <React.Fragment>\n        <Typography variant=\"h4\">{Name}</Typography>\n        <Typography variant=\"h6\" color={HasFailures ? 'error' : 'secondary'}>\n          Status: {HasFailures ? 'Failing' : 'Working'}\n        </Typography>\n        <Typography variant=\"h6\">Last Checked: {dateString}</Typography>\n        {HasFailures ? (\n          <React.Fragment>\n            <Typography variant=\"h6\" style={{ marginBottom: '8px' }}>\n              Failing:{' '}\n            </Typography>\n            <VirtualizedList list={failing} />\n          </React.Fragment>\n        ) : (\n          <React.Fragment />\n        )}\n        <React.Fragment>\n          <Typography variant=\"h6\" style={{ margin: '8px 0' }}>\n            Passing:{' '}\n          </Typography>\n          <VirtualizedList list={passing} />\n        </React.Fragment>\n      </React.Fragment>\n    );\n  }\n\n  render(): JSX.Element {\n    return (\n      <React.Fragment>\n        <MaterialLink href=\"/modlists/status\">Back to Dashboard</MaterialLink>\n        {this.showLoading()}\n        {this.showError()}\n        {this.showContent()}\n      </React.Fragment>\n    );\n  }\n}\n\nconst connector = connect(\n  (state: ApplicationState, ownProps: Props) => ({\n    ...state.modlistStatus,\n    ...ownProps,\n  }),\n  StatusStore.actionCreator\n);\n\nexport default connector(ModlistStatus as any);\n","import * as React from 'react';\nimport { connect, ConnectedProps } from 'react-redux';\nimport { Route } from 'react-router';\n\nimport { ApplicationState } from 'store';\nimport * as ModlistStatusStore from 'store/ModlistStatusStore';\n\nimport { ModlistMetaData } from 'types/modlist';\n\nimport { ReactAxiosComponent } from 'types/axios';\nimport { Loading, Error, DataError } from 'components/Fetching';\n\nimport StatusDashboard from './Dashboard';\nimport ModlistStatus from './info/ModlistStatus';\n\ntype PropsFromRedux = ConnectedProps<typeof connector>;\n\ninterface OwnProps {\n  modlists: ModlistMetaData[];\n}\n\ntype ModlistsStatusPageProps = OwnProps &\n  typeof ModlistStatusStore.actionCreator &\n  ModlistStatusStore.ModlistStatusState &\n  PropsFromRedux;\n\nexport class ModlistsStatusPage extends ReactAxiosComponent<\n  ModlistsStatusPageProps\n> {\n  ensureDataFetched(): void {\n    this.props.requestStatusList();\n  }\n\n  showError(): JSX.Element | undefined {\n    if (this.props.isLoading) return;\n    if (!this.props.error) return;\n    return <Error error={this.props.error} />;\n  }\n\n  showLoading(): JSX.Element | undefined {\n    if (this.props.error) return;\n    if (!this.props.isLoading) return;\n    return <Loading message=\"Loading status from build server\" />;\n  }\n\n  showContent(): JSX.Element | undefined {\n    if (this.props.error) return;\n    if (this.props.isLoading) return;\n\n    if (!this.props.modlists) return <DataError />;\n    if (this.props.modlists.length === 0) return <DataError />;\n\n    if (!this.props.statusList) return <DataError />;\n    if (this.props.statusList.length === 0) return <DataError />;\n\n    return (\n      <React.Fragment>\n        <Route\n          exact\n          path=\"/modlists/status\"\n          render={() => <StatusDashboard statusList={this.props.statusList!} />}\n        />\n        <Route\n          path=\"/modlists/status/:url\"\n          render={(props) => (\n            <ModlistStatus {...props} modlists={this.props.modlists} />\n          )}\n        />\n        <Route\n          path=\"/modlists/status/search\"\n          render={() => <div>Search page</div>}\n        />\n      </React.Fragment>\n    );\n  }\n\n  render(): JSX.Element {\n    return (\n      <React.Fragment>\n        {this.showLoading()}\n        {this.showError()}\n        {this.showContent()}\n      </React.Fragment>\n    );\n  }\n}\n\nconst connector = connect(\n  (state: ApplicationState, ownProps: OwnProps) => ({\n    ...state.modlistStatusList,\n    ...ownProps,\n  }),\n  ModlistStatusStore.actionCreator\n);\n\nexport default connector(ModlistsStatusPage as any);\n","import * as React from 'react';\nimport { connect, ConnectedProps } from 'react-redux';\nimport { RouteComponentProps } from 'react-router';\nimport { v4 as uuidv4 } from 'uuid';\nimport _ from 'underscore';\nimport Markdown from 'markdown-to-jsx';\n\nimport { ApplicationState } from 'store';\nimport * as DetailedStatusStore from 'store/DetailedStatusStore';\n\nimport { getGameName } from 'utils/games';\nimport { ModlistMetaData, ModlistStatus } from 'types/modlist';\nimport {\n  State,\n  Archive,\n  HTTPDownloaderState,\n  MetaState,\n  NexusDownloaderState,\n  GoogleDriveDownloaderState,\n} from 'types/archive';\nimport options from 'utils/markdown.config';\n\nimport { ReactAxiosComponent } from 'types/axios';\nimport { Loading, Error, DataError } from 'components/Fetching';\nimport MaterialLink from 'components/MaterialLink';\n\nimport { toFileSizeString } from 'utils/other';\n\nimport {\n  Box,\n  Typography,\n  Link,\n  Container,\n  FormControlLabel,\n  Grid,\n  Checkbox,\n} from '@material-ui/core';\n\nimport MaterialTable, { MTableToolbar } from 'material-table';\n\ntype PropsFromRedux = ConnectedProps<typeof connector>;\n\ninterface Props {\n  modlists: ModlistMetaData[];\n}\n\ntype ModlistSearchProps = Props &\n  typeof DetailedStatusStore.actionCreator &\n  DetailedStatusStore.ModlistStatusState &\n  PropsFromRedux &\n  RouteComponentProps<{ url: string }>;\n\ninterface ModlistsSearchState {\n  archives?: Archive[] | undefined;\n  showNSFW: boolean;\n  showImages: boolean;\n}\n\nclass ModlistSearch extends ReactAxiosComponent<\n  ModlistSearchProps,\n  ModlistsSearchState\n> {\n  constructor(props: ModlistSearchProps) {\n    super(props);\n\n    this.state = {\n      showNSFW: false,\n      showImages: true,\n    };\n  }\n\n  private onCheckNSFW() {\n    this.setState({\n      ...this.state,\n      showNSFW: !this.state.showNSFW,\n    });\n  }\n\n  private onCheckImages() {\n    this.setState({\n      ...this.state,\n      showImages: !this.state.showImages,\n    });\n  }\n\n  public renderState(state: State | undefined) {\n    if (!state) return;\n    return state.$type.replace(', Wabbajack.Lib', '');\n  }\n\n  public onClick = (data: Archive) => {\n    const type = data.State.$type.replace(', Wabbajack.Lib', '');\n    if (type === 'LoversLabDownloader' || type === 'VectorPlexusDownloader') {\n      const metaState = data.State as MetaState;\n      if (metaState.URL) window.open(metaState.URL, 'blank');\n      return;\n    }\n\n    if (type === 'HttpDownloader' || type === 'MegaDownloader') {\n      const httpState = data.State as HTTPDownloaderState;\n      window.open(httpState.Url, '_blank');\n      return;\n    }\n\n    switch (type) {\n      case 'NexusDownloader':\n        const nexusState = data.State as NexusDownloaderState;\n        window.open(\n          `https://www.nexusmods.com/${nexusState.GameName.toLowerCase()}/mods/${\n            nexusState.ModID\n          }/`\n        );\n        return;\n      case 'GoogleDriveDownloader':\n        const gDriveState = data.State as GoogleDriveDownloaderState;\n        window.open(\n          `https://drive.google.com/uc?id=${gDriveState.Id}`,\n          '_blank'\n        );\n    }\n  };\n\n  public disabled(state: State) {\n    const type = state.$type.replace(', Wabbajack.Lib', '');\n    if (type === 'LoversLabDownloader' || type === 'VectorPlexusDownloader') {\n      const metaState = state as MetaState;\n      return metaState.URL === undefined;\n    }\n\n    if (\n      type === 'MegaDownloader' ||\n      type === 'HttpDownloader' ||\n      type === 'GoogleDriveDownloader' ||\n      type === 'NexusDownloader'\n    )\n      return false;\n\n    return true;\n  }\n\n  public disabledDetailPanel(rowData: Archive) {\n    const type = rowData.State.$type.replace(', Wabbajack.Lib', '');\n    const metaStates = [\n      'LoversLabDownloader',\n      'NexusDownloader',\n      'VectorPlexusDownloader',\n    ];\n    return !metaStates.includes(type);\n  }\n\n  public renderDetailPanel = (rowData: Archive) => {\n    const metaState = rowData.State as MetaState;\n    return (\n      <Container>\n        <Typography variant=\"h6\">\n          {metaState.Name} by {metaState.Author}\n        </Typography>\n        {metaState.Version ? (\n          <Typography variant=\"subtitle1\">\n            Version: {metaState.Version}\n          </Typography>\n        ) : (\n          <React.Fragment />\n        )}\n        {metaState.Description ? (\n          <Typography variant=\"body1\">{metaState.Description}</Typography>\n        ) : (\n          <React.Fragment />\n        )}\n\n        {metaState.ImageURL && this.state.showImages ? (\n          <img\n            style={{ width: '100%' }}\n            src={metaState.ImageURL}\n            alt={metaState.Name}\n          />\n        ) : (\n          <React.Fragment />\n        )}\n      </Container>\n    );\n  };\n\n  ensureDataFetched(): void {\n    this.props.requestDetailedStatus(this.props.match.params.url);\n\n    if (!this.props.statusMap) return;\n\n    if (!this.props.statusMap.has(this.props.match.params.url)) return;\n\n    const status = this.props.statusMap.get(this.props.match.params.url);\n\n    if (!status) return;\n\n    if (this.state.archives) return;\n\n    const archives = _.map(status.Archives, (a) => {\n      return a.Archive;\n    });\n\n    this.setState({\n      ...this.state,\n      archives: archives,\n    });\n  }\n\n  showError(): JSX.Element | undefined {\n    if (this.props.isLoading) return;\n    if (!this.props.error) return;\n    return <Error error={this.props.error} />;\n  }\n\n  showLoading(): JSX.Element | undefined {\n    if (this.props.error) return;\n    if (!this.props.isLoading) return;\n    return <Loading message=\"Loading Modlist Status\" />;\n  }\n\n  showContent(): JSX.Element | undefined {\n    if (this.props.error) return;\n    if (this.props.isLoading) return;\n\n    if (!this.props.modlists) return <DataError />;\n    if (this.props.modlists.length === 0) return <DataError />;\n\n    if (!this.props.statusMap) return <DataError />;\n\n    if (!this.props.statusMap.has(this.props.match.params.url))\n      return <DataError />;\n\n    const status = this.props.statusMap.get(this.props.match.params.url);\n\n    if (!status) return <DataError />;\n\n    return (\n      <React.Fragment>\n        <MaterialTable\n          components={{\n            Toolbar: (props) => (\n              <div style={{ backgroundColor: '#1F1B24' }}>\n                <MTableToolbar {...props} />\n                <Grid container alignItems=\"flex-start\" justify=\"flex-end\">\n                  <Grid item>\n                    <FormControlLabel\n                      control={\n                        <Checkbox\n                          name=\"enableNSFW\"\n                          checked={this.state.showNSFW}\n                          onChange={this.onCheckNSFW.bind(this)}\n                        />\n                      }\n                      label=\"Show NSFW\"\n                    />\n                  </Grid>\n                  <Grid item>\n                    <FormControlLabel\n                      control={\n                        <Checkbox\n                          name=\"enableImages\"\n                          checked={this.state.showImages}\n                          onChange={this.onCheckImages.bind(this)}\n                        />\n                      }\n                      label=\"Show Images\"\n                    />\n                  </Grid>\n                </Grid>\n              </div>\n            ),\n          }}\n          options={{\n            sorting: true,\n            headerStyle: {\n              backgroundColor: '#242424',\n            },\n          }}\n          columns={[\n            { title: 'Name', field: 'Name', defaultSort: 'asc' },\n            {\n              title: 'Size',\n              field: 'Size',\n              render: (rowData) => toFileSizeString(rowData.Size),\n            },\n            { title: 'Hash', field: 'Hash' },\n            {\n              title: 'State',\n              field: 'State',\n              customSort: (a: Archive, b: Archive) =>\n                a.State.$type.length - b.State.$type.length,\n              render: (rowData) => this.renderState(rowData.State),\n            },\n          ]}\n          //data={FakeArchiveList(100)}\n          data={this.state.archives!}\n          actions={[\n            (rowData) => ({\n              icon: 'link',\n              tooltip: 'Visit',\n              onClick: () => this.onClick(rowData),\n              disabled: this.disabled(rowData.State),\n            }),\n          ]}\n          detailPanel={[\n            (rowData) => ({\n              tooltip: 'Show Metadata',\n              render: (rowData) => this.renderDetailPanel(rowData),\n              disabled: this.disabledDetailPanel(rowData),\n            }),\n          ]}\n          title={`Archive Search for ${status.Name}`}\n        />\n      </React.Fragment>\n    );\n\n    return;\n  }\n\n  render(): JSX.Element {\n    return (\n      <React.Fragment>\n        <MaterialLink href=\"/modlists/gallery\">\n          Back to the Gallery\n        </MaterialLink>\n        {this.showLoading()}\n        {this.showError()}\n        {this.showContent()}\n      </React.Fragment>\n    );\n  }\n}\nconst connector = connect(\n  (state: ApplicationState, ownProps: Props) => ({\n    ...state.modlistStatus,\n    ...ownProps,\n  }),\n  DetailedStatusStore.actionCreator\n);\n\nexport default connector(ModlistSearch as any);\n","import * as React from 'react';\nimport { Route } from 'react-router';\n\nimport { ModlistMetaData } from 'types/modlist';\n\nimport Search from './Search';\n\nimport { Container } from '@material-ui/core';\n\ninterface ModlistsSearchPageProps {\n  modlists: ModlistMetaData[];\n}\n\nexport class ModlistSearchPage extends React.PureComponent<\n  ModlistsSearchPageProps\n> {\n  render(): JSX.Element {\n    return (\n      <React.Fragment>\n        <Container\n          maxWidth=\"lg\"\n          style={{ paddingTop: '16px', paddingBottom: '16px' }}\n        >\n          <Route\n            path=\"/modlists/search/:url\"\n            render={(props) => (\n              <Search modlists={this.props.modlists} {...props} />\n            )}\n          />\n        </Container>\n      </React.Fragment>\n    );\n  }\n}\n","import * as React from 'react';\nimport { Route } from 'react-router';\nimport { connect, ConnectedProps } from 'react-redux';\n\nimport { ApplicationState } from 'store';\nimport * as ModlistsStore from 'store/ModlistsStore';\n\nimport { ReactAxiosComponent } from 'types/axios';\nimport { Error, DataError } from 'components/Fetching';\nimport { ModlistsGalleryPage } from './gallery';\nimport ModlistsStatusPage from './status';\nimport { ModlistSearchPage } from './search';\n\ntype PropsFromRedux = ConnectedProps<typeof connector>;\n\ntype ModlistsPageProps = PropsFromRedux & typeof ModlistsStore.actionCreator;\n\nexport class ModlistsPage extends ReactAxiosComponent<ModlistsPageProps> {\n  ensureDataFetched(): void {\n    this.props.requestModlists();\n  }\n\n  showError(): JSX.Element | undefined {\n    if (this.props.isLoading) return;\n    if (!this.props.error) return;\n    return <Error error={this.props.error} />;\n  }\n\n  showLoading(): JSX.Element | undefined {\n    if (this.props.error) return;\n    if (!this.props.isLoading) return;\n    return (\n      <React.Fragment>\n        <Route\n          path=\"/modlists/gallery\"\n          render={() => (\n            <ModlistsGalleryPage\n              modlists={[]}\n              isLoading={this.props.isLoading}\n            />\n          )}\n        />\n      </React.Fragment>\n    );\n  }\n\n  showContent(): JSX.Element | undefined {\n    if (this.props.error) return;\n    if (this.props.isLoading) return;\n\n    if (!this.props.modlists) return <DataError />;\n    if (this.props.modlists.length === 0) return <DataError />;\n\n    return (\n      <React.Fragment>\n        <Route\n          path=\"/modlists/gallery\"\n          render={() => (\n            <ModlistsGalleryPage\n              modlists={this.props.modlists!}\n              isLoading={this.props.isLoading}\n            />\n          )}\n        />\n        <Route\n          path=\"/modlists/status\"\n          render={() => <ModlistsStatusPage modlists={this.props.modlists!} />}\n        />\n        <Route\n          path=\"/modlists/search\"\n          render={() => <ModlistSearchPage modlists={this.props.modlists!} />}\n        />\n      </React.Fragment>\n    );\n  }\n\n  render(): JSX.Element {\n    return (\n      <React.Fragment>\n        {this.showLoading()}\n        {this.showError()}\n        {this.showContent()}\n      </React.Fragment>\n    );\n  }\n}\n\nconst connector = connect(\n  (state: ApplicationState) => state.modlists,\n  ModlistsStore.actionCreator\n);\n\nexport default connector(ModlistsPage as any);\n","import * as React from 'react';\nimport { Route } from 'react-router';\n\nimport { Box, Container } from '@material-ui/core';\n\nimport Header from 'components/Header';\nimport Footer from 'components/Footer';\n\nimport HomePage from 'pages/home';\nimport InfoPage from 'pages/info';\nimport ModlistsPage from 'pages/modlists';\n\nimport { elevation2 } from 'assets/jss/theme';\n\nconst mainRaised = {\n  background: elevation2,\n  borderRadius: '6px',\n  boxShadow:\n    '0 16px 24px 2px rgba(0, 0, 0, 0.14), 0 6px 30px 5px rgba(0, 0, 0, 0.12), 0 8px 10px -5px rgba(0, 0, 0, 0.2)',\n};\n\nconst App: React.FC = () => {\n  return (\n    <React.Fragment>\n      <Header />\n      <Box style={mainRaised} m={4}>\n        <Container\n          maxWidth=\"lg\"\n          style={{ paddingTop: '16px', paddingBottom: '16px' }}\n        >\n          <Route exact path=\"/\" component={HomePage} />\n          <Route path=\"/info\" component={InfoPage} />\n          <Route path=\"/modlists\" component={ModlistsPage} />\n        </Container>\n      </Box>\n      <Footer />\n    </React.Fragment>\n  );\n};\n\nexport default App;\n","import * as React from 'react';\nimport * as ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { ConnectedRouter } from 'connected-react-router';\nimport { createBrowserHistory } from 'history';\n\nimport './assets/scss/wabbajack.scss';\n\nimport configureStore from 'store/configureStore';\nimport { theme } from 'assets/jss/theme';\n\nimport App from './App';\n\nimport { ThemeProvider } from '@material-ui/core/styles';\n\n// Create browser history to use in the Redux store\nconst baseUrl = document\n  .getElementsByTagName('base')[0]\n  .getAttribute('href') as string;\nconst history = createBrowserHistory({ basename: baseUrl });\n\n// Get the application-wide store instance, prepopulating with state from the server where available.\nconst store = configureStore(history);\n\nconst { userAgent } = window.navigator;\nconst isIE = /MSIE|Trident/.test(userAgent);\n\nif (isIE) {\n  ReactDOM.render(\n    <div>\n      <h1>Stop using IE!</h1>\n      <img src=\"https://i.imgflip.com/ywgpb.jpg\" alt=\"STOP IT!\"></img>\n    </div>,\n    document.getElementById('root')\n  );\n} else {\n  ReactDOM.render(\n    <Provider store={store}>\n      <ConnectedRouter history={history}>\n        <ThemeProvider theme={theme}>\n          <App />\n        </ThemeProvider>\n      </ConnectedRouter>\n    </Provider>,\n    document.getElementById('root')\n  );\n\n  //registerServiceWorker();\n}\n","import { applyMiddleware, combineReducers, compose, createStore } from 'redux';\nimport thunk from 'redux-thunk';\nimport { connectRouter, routerMiddleware } from 'connected-react-router';\nimport { History } from 'history';\nimport { ApplicationState, reducers } from './';\n\nexport default function configureStore(\n  history: History,\n  initialState?: ApplicationState\n) {\n  const middleware = [thunk, routerMiddleware(history)];\n\n  const rootReducer = combineReducers({\n    ...reducers,\n    router: connectRouter(history),\n  });\n\n  const enhancers = [];\n  const windowIfDefined =\n    typeof window === 'undefined' ? null : (window as any);\n  if (windowIfDefined && windowIfDefined.__REDUX_DEVTOOLS_EXTENSION__) {\n    enhancers.push(windowIfDefined.__REDUX_DEVTOOLS_EXTENSION__());\n  }\n\n  return createStore(\n    rootReducer,\n    initialState,\n    compose(applyMiddleware(...middleware), ...enhancers)\n  );\n}\n"],"sourceRoot":""}